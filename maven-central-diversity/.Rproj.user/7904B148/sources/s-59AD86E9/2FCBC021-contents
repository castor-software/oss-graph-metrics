---
title: "Study subjects"
output: html_notebook

### Import required libraries

```{r}
library(tidyverse)
library(latex2exp)
library(scales)
theme_set(theme_bw())
```

### Read the data

```{r}
data <- read_csv("DatasetFinal/data.csv")
time_to_release <- read.csv("DatasetFinal/timeToRelease.csv")
summary(data$Dependencies)
```

### Tidy the data

```{r}
# Preprocess the data to get the libraries and its versions
data_versions <- data %>% 
  dplyr::select(GroupId, ArtifactId, Version, DUsages, PageRank, Dependencies, Release) %>% 
  unite(Library, GroupId, ArtifactId, sep = ":", remove = F) %>% 
  dplyr::select(Library, Version, DUsages, PageRank, Dependencies, Release) %>%
  arrange(Release) %>% 
  group_by(Library) %>% 
  summarise(NumVersions = n(), Usages = list(DUsages), PageRanks = list(PageRank), Dependencies = list(Dependencies), Releases = list(Release)) %>%
  arrange(desc(NumVersions))

# Calculate the difference between releases (lag)
tmp <- data_versions$Releases
sol_diff <- c()
for(i in 1:length(tmp)){
 print(length(tmp) - i)
 list <- as.vector(difftime(tmp[i][[1]], lag(tmp[i][[1]]), units = "days"))
 list <- list(x=list)
 sol_diff <- c(sol_diff, list)
}
data_versions$DiffReleases <- sol_diff

# Calculate the mean time between releases
sol_mean <- c()
for (i in 1:length(sol)) {
  print(length(sol) - i)
  mean <- mean(as.numeric(sol[[i]]), na.rm = T)
  sol_mean <- c(sol_mean, mean)
}
data_versions$MeanDiff <- sol_mean

# Calculate the standard deviation between releases
sol_sd <- c()
for (i in 1:length(sol)) {
  print(length(sol) - i)
  sd <- sd(as.numeric(sol[[i]]), na.rm = T)
  sol_sd <- c(sol_sd, sd)
}
data_versions$SDDiff <- sol_sd

# Calculate the mean of usages
usages_mean <- c()
for (i in 1:length(data_versions$Usages)) {
  print(length(data_versions$Usages) - i)
  mean <- mean(as.numeric(data_versions$Usages[[i]]), na.rm = T)
  usages_mean <- c(usages_mean, mean)
}
data_versions$MeanUsages <- usages_mean

# Calculate the mean of dependencies
dependencies_mean <- c()
for (i in 1:length(data_versions$Dependencies)) {
  print(length(data_versions$Dependencies) - i)
  mean <- mean(as.numeric(data_versions$Dependencies[[i]]), na.rm = T)
  dependencies_mean <- c(dependencies_mean, mean)
}
data_versions$MeanDependencies <- dependencies_mean

# Calculate the mean of pageranks
pageranks_mean <- c()
for (i in 1:length(data_versions$PageRanks)) {
  print(length(data_versions$PageRanks) - i)
  mean <- mean(as.numeric(data_versions$PageRanks[[i]]), na.rm = T)
  pageranks_mean <- c(pageranks_mean, mean)
}
data_versions$MeanPageranks <- pageranks_mean

# Calculate the number of dependencies
dependencies_total <- c()
for (i in 1:length(data_versions$Dependencies)) {
  print(length(data_versions$Dependencies) - i)
  sum <- sum(as.numeric(data_versions$Dependencies[[i]]), na.rm = T)
  dependencies_total <- c(dependencies_total, sum)
}
data_versions$NumDependencies <- dependencies_total

# Calculate the number of usages
usages_total <- c()
for (i in 1:length(data_versions$Usages)) {
  print(length(data_versions$Usages) - i)
  sum <- sum(as.numeric(data_versions$Usages[[i]]), na.rm = T)
  usages_total <- c(usages_total, sum)
}
data_versions$NumUsages <- usages_total

# Save the dataset as an R object
save(data_versions, file = "DatasetFinal/data_versions.RData")
```